@import "variables";
@import "colors";
@import "responsive-mixins";

@function em( $value, $baseSize: 16) {
  @return ($value/$baseSize)+em;
}

.clearfix:after {
  content: ".";
  display: block;
  visibility: hidden;
  height: 0;
  clear: both;
  overflow: hidden;
}

body {
  font: 100% 'Source Sans Pro', sans-serif;
}

a {
  text-decoration: none;
}

p {
  margin: 0;
}

* {
  box-sizing: border-box;
}

header {
  width: 100vh;
  transform: rotate(-90deg) translateX(-50vh) translateY(-50vh);
  transform-origin: center top;
  h1 {
	margin: 0;
  }
}

.wrap {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  overflow: hidden;
}

main {
  @include transition(transform 0.5s 1s ease-in-out);
  section {
	height: 100vh;
	display: flex;
	align-items: center;
	justify-content: center;

	.question {
	  @include colours(color);
	  padding-right: 20px;
	  max-width: 40%;
	  font-size: em(80);
	}

	.answers {
	  max-width: 40%;
	  padding-left: 20px;
	  font-size: em(20);

	  ol {
		list-style-type: none;
		counter-reset: listStyle;
		padding: 0;

		li {
		  $fontSize: 20;
		  display: flex;
		  align-items: center;
		  justify-content: center;
		  counter-increment: listStyle;
		  padding: em(20, $fontSize) 0;
		  border-top: 1px solid #010101;

		  &:first-child {
			border-top: none;
		  }

		  &::before {
			content: counter(listStyle, lower-alpha);
			text-transform: uppercase;
			width:30px;
			text-align: center;
			display: block;
		  }

		  .custom-radio {
			display: block;
			width: 100%;
			padding-left: 30px
		  }
		}
	  }
	}

	.question, .answers {

	}
  }
}

.custom-radio {

  position: relative;

  input[type="radio"] {
	position: absolute;
	z-index: -1;
	opacity: 0;
  }

  input[type="radio"]:checked ~ label {
	&:after {
	  width: 40px;
	}
  }

  label {
	cursor: pointer;
	display: block;

	&:hover:after {
	  width: 40px;
	}

	&:after {
	  content: "";
	  @include transform(skewY(-12deg));
	  width: 0px;
	  height: 25px;
	  position: absolute;
	  z-index: -1;
	  left: -33px;
	  top: 13px;
	  @include transition(width 0.2s ease-out);

	}
	@include colours(background-color, false, true);
  }

}

button {
  $baseButtonFontSize: 18;
  font-size: em($baseButtonFontSize);
  background: white;
  border: em(4, $baseButtonFontSize) solid;
  padding: em(7, $baseButtonFontSize) em(15, $baseButtonFontSize);
  text-transform: uppercase;
  white-space: nowrap;
  @include transition(border 0.3s ease-in-out, color 0.3s ease-in-out, opacity 0.3s ease-in-out, background 0.3s ease-in-out);
  @include colours(border-color);
  @include colours(color);
  &:focus {
	outline: 0;
  }
  &:hover, &.inactive {
	color: white;
	@include background-colors(false);
  }
  &.inactive {
	@include opacity(0.3);
  }

  &.inactive {
	cursor: pointer;
  }

  &:active {
	@include transform(scale(0.95, 0.95));
  }
}

.button-reset {
  display: none
}
